{"version":3,"file":"static/js/638.97b4c3a7.chunk.js","mappings":"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","sources":["hooks/useCurrentEntity.ts","views/TechnologyView/components/TechnologyViewer/TechnologyViewer.tsx","views/TechnologyView/TechnologyView.tsx"],"sourcesContent":["import {AppData, useAppData} from 'contexts';\nimport {Destination, Crew, Technology} from 'models';\nimport {useLocation} from 'react-router-dom';\n\nexport default function useCurrentEntity(): Destination | Crew | Technology {\n  const data: AppData = useAppData();\n  const {pathname} = useLocation();\n  const [root, resource, key]: string[] = pathname.split('/');\n  return data[resource].find((entity: Destination | Crew | Technology) => entity.slug === key);\n}\n","import React, {memo, Suspense, useMemo, useRef, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {useGLTF} from '@react-three/drei';\nimport {Box3, Group, PerspectiveCamera, Vector3} from 'three';\nimport {Canvas, useFrame, useThree} from '@react-three/fiber';\nimport styled from 'styled-components';\nimport endpoints from 'api/endpoints';\nimport {CameraControls, frameArea} from 'utils';\n\ntype ModelProps = {\n  url: string;\n};\n\nconst CanvasWrapper = styled.div`\n  height: 27rem;\n  width: 27rem;\n  cursor: ${({mouseDown}: {mouseDown: boolean}) => (mouseDown ? 'grabbing' : 'grab')};\n`;\n\nfunction useGLTFWithMeasures(url: string) {\n  const {scene} = useGLTF(url);\n\n  const box = new Box3().setFromObject(scene);\n  const boxSize = box.getSize(new Vector3()).length();\n  const boxCenter = box.getCenter(new Vector3());\n\n  const copiedScene = useMemo(() => scene.clone(), [scene]);\n\n  return {copiedScene, boxSize, boxCenter};\n}\n\nfunction Model({url, ...rest}: ModelProps & JSX.IntrinsicElements['group']) {\n  const group = useRef<Group>(null!);\n\n  const {copiedScene, boxSize, boxCenter} = useGLTFWithMeasures(url);\n\n  const {camera}: {camera: PerspectiveCamera} = useThree();\n\n  frameArea(boxSize * 1.2, boxSize, boxCenter, camera);\n\n  const rotationSpeed = 0.001;\n\n  useFrame(() => {\n    group.current.rotation.y += rotationSpeed;\n  });\n\n  return (\n    <group ref={group} dispose={null} {...rest}>\n      <primitive object={copiedScene} />\n    </group>\n  );\n}\n\nconst OptimizedModel = memo(Model);\n\ntype DestinationViewerProps = {\n  className?: string;\n  model: string;\n};\n\nexport default function ModelViewer({className, model}: DestinationViewerProps) {\n  const [mouseDown, setMouseDown] = useState(false);\n\n  const modelUrl = endpoints.models + model;\n\n  return (\n    <CanvasWrapper\n      className={className}\n      onMouseDown={() => setMouseDown(true)}\n      onMouseUp={() => setMouseDown(false)}\n      mouseDown={mouseDown}\n    >\n      <Canvas camera={{fov: 15}}>\n        <CameraControls enableZoom={false} enableDamping={true} enablePan={false} />\n        <directionalLight position={[-5, 5, 5]} color=\"white\" />\n        <hemisphereLight groundColor={0xffffff} intensity={0.2} />\\\n        <Suspense fallback={null}>\n          <OptimizedModel url={modelUrl} />\n        </Suspense>\n      </Canvas>\n    </CanvasWrapper>\n  );\n}\n\nModelViewer.propTypes = {\n  className: PropTypes.string,\n  model: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport {motion, Variants} from 'framer-motion';\nimport {TechnologyViewer} from './components';\nimport useCurrentEntity from 'hooks/useCurrentEntity';\nimport {Page} from 'components';\nimport styled from 'styled-components';\nimport {mediaQuery} from 'theme';\n\nconst StyledViewer = styled(TechnologyViewer)`\n  grid-area: viewer;\n\n  ${({theme}) =>\n    mediaQuery(\n      theme.breakPoints.desktopUp,\n      `\n      align-self: start;\n      `,\n    )}\n\n  ${({theme}) =>\n    mediaQuery(\n      theme.breakPoints.mobileDown,\n      `\n      width:90%;\n      height:90%;\n     `,\n    )}\n`;\n\nconst StyledArticle = styled.article`\n  ${({theme}) => theme.utils.general.flow()}\n  padding-inline: 1rem;\n  grid-area: content;\n`;\n\nconst StyledHeader = styled.header`\n  ${({theme}) => theme.utils.general.flow('small')}\n`;\n\nconst StyledTitle = styled.h2`\n  ${({theme}) =>\n    `\n  color: hsl(${theme.colors.white} / 0.5);\n  ${theme.utils.typography.size[500]}\n  ${theme.utils.typography.uppercase}\n  ${theme.utils.typography.family.sansCond}\n  ${theme.utils.typography.letterSpacing[3]}\n  ${theme.utils.typography.color.accent}\n `}\n`;\n\nconst StyledSubtitle = styled.p`\n  ${({theme}) =>\n    `\n    ${theme.utils.typography.size[700]}\n    ${theme.utils.typography.uppercase}\n    ${theme.utils.typography.family.serif}\n  `}\n`;\n\nconst MotionArticle = motion(StyledArticle);\n\nconst variants: Variants = {\n  hidden: {\n    x: -10,\n    opacity: 0,\n    transition: {\n      duration: 0.5,\n    },\n  },\n  visible: {\n    x: 0,\n    opacity: 1,\n    transition: {\n      duration: 0.5,\n    },\n  },\n};\n\nexport default function TechnologyView() {\n  const technology = useCurrentEntity();\n\n  return (\n    <Page title={technology.name}>\n      <MotionArticle\n        role=\"tabpanel\"\n        tabIndex={0}\n        initial=\"hidden\"\n        animate=\"visible\"\n        exit=\"hidden\"\n        variants={variants}\n        key={technology.name}\n      >\n        <StyledHeader>\n          <StyledTitle>The terminology...</StyledTitle>\n          <StyledSubtitle>{technology.name}</StyledSubtitle>\n        </StyledHeader>\n\n        <p>{technology.description}</p>\n      </MotionArticle>\n      <StyledViewer model={technology.model} />\n    </Page>\n  );\n}\n"],"names":["useCurrentEntity","data","useAppData","useLocation","pathname","split","resource","key","find","entity","slug","CanvasWrapper","styled","mouseDown","Model","url","rest","group","useRef","scene","useGLTF","box","Box3","setFromObject","boxSize","getSize","Vector3","length","boxCenter","getCenter","copiedScene","useMemo","clone","useGLTFWithMeasures","camera","useThree","frameArea","useFrame","current","rotation","y","ref","dispose","object","OptimizedModel","memo","StyledViewer","className","model","useState","setMouseDown","modelUrl","endpoints","onMouseDown","onMouseUp","fov","enableZoom","enableDamping","enablePan","position","color","groundColor","intensity","Suspense","fallback","theme","mediaQuery","breakPoints","desktopUp","mobileDown","StyledArticle","utils","general","flow","StyledHeader","StyledTitle","colors","white","typography","size","uppercase","family","sansCond","letterSpacing","accent","StyledSubtitle","serif","MotionArticle","motion","variants","hidden","x","opacity","transition","duration","visible","TechnologyView","technology","title","name","role","tabIndex","initial","animate","exit","description"],"sourceRoot":""}